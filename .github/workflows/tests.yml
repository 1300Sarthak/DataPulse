name: Run Tests

on:
  pull_request:
    branches: [main, master]
  push:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio httpx

      - name: Create .env file
        run: |
          cp env.example .env
          echo "FINNHUB_API_KEY=test_key" >> .env
          echo "OPENWEATHER_API_KEY=test_key" >> .env
          echo "GNEWS_API_KEY=test_key" >> .env
          echo "EXCHANGE_API_KEY=test_key" >> .env
          echo "SUPABASE_URL=test_url" >> .env
          echo "SUPABASE_KEY=test_key" >> .env

      - name: Run tests
        run: |
          pytest tests/ -v --tb=short

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            .pytest_cache/
            test-results/
