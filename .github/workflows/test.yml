name: Run Tests

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio pytest-cov httpx

      - name: Create test environment
        run: |
          cp env.example .env
          echo "FINNHUB_API_KEY=test_key" >> .env
          echo "OPENWEATHER_API_KEY=test_key" >> .env
          echo "GNEWS_API_KEY=test_key" >> .env
          echo "EXCHANGE_API_KEY=test_key" >> .env
          echo "SUPABASE_URL=test_url" >> .env
          echo "SUPABASE_KEY=test_key" >> .env
          echo "REDIS_URL=redis://localhost:6379" >> .env

      - name: Run tests with coverage
        run: |
          pytest tests/ -v --cov=app --cov-report=xml --cov-report=term-missing --tb=short

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.python-version }}
          path: |
            .pytest_cache/
            coverage.xml
            htmlcov/
          retention-days: 30

      - name: Test summary
        if: always()
        run: |
          echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Python version: ${{ matrix.python-version }}" >> $GITHUB_STEP_SUMMARY
          echo "- Tests completed successfully" >> $GITHUB_STEP_SUMMARY
          echo "- Coverage report generated" >> $GITHUB_STEP_SUMMARY
